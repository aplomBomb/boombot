// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aplombomb/boombot/youtube/ifaces (interfaces: YoutubeClientAPI)

// Package mock_youtubeclient is a generated GoMock package.
package mock_youtubeclient

import (
	gomock "github.com/golang/mock/gomock"
	youtube "google.golang.org/api/youtube/v3"
	reflect "reflect"
)

// MockYoutubeClientAPI is a mock of YoutubeClientAPI interface
type MockYoutubeClientAPI struct {
	ctrl     *gomock.Controller
	recorder *MockYoutubeClientAPIMockRecorder
}

// MockYoutubeClientAPIMockRecorder is the mock recorder for MockYoutubeClientAPI
type MockYoutubeClientAPIMockRecorder struct {
	mock *MockYoutubeClientAPI
}

// NewMockYoutubeClientAPI creates a new mock instance
func NewMockYoutubeClientAPI(ctrl *gomock.Controller) *MockYoutubeClientAPI {
	mock := &MockYoutubeClientAPI{ctrl: ctrl}
	mock.recorder = &MockYoutubeClientAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockYoutubeClientAPI) EXPECT() *MockYoutubeClientAPIMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockYoutubeClientAPI) List(arg0 []string) *youtube.SearchListCall {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(*youtube.SearchListCall)
	return ret0
}

// List indicates an expected call of List
func (mr *MockYoutubeClientAPIMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockYoutubeClientAPI)(nil).List), arg0)
}
